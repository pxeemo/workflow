# vim:ft=conf
set icons
set hidden
set shell bash
set shellopts '-eu'
set ifs "\n"
set previewer "~/.config/lf/lf_kitty_preview"
set cleaner '~/.config/lf/lf_kitty_clean'
set mouse
# set drawbox
# set ratios 1:2:3
set scrolloff 8
set cursorpreviewfmt "\033[7;2m"

map <enter> shell
map ` !true

# execute current file (must be executable)
map x $$f
map X !$f

# dedicated keys for file opener actions
map o &mimeopen $f
map O $mimeopen --ask $f

map W &setwallpaper $f
map i $bat --paging always $f
map gt cd ~/.local/share/Trash

# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

# mkdir command. See wiki if you want it to select created dir
map a :push %mkdir<space>
map ; :push :
cmd yank-dirname $dirname -- "$f" | head -c-1 | wl-copy
cmd yank-path $printf '%s' "$fx" | wl-copy
cmd yank-basename $basename -a -- "$fx" | head -c-1 | wl-copy

# cache clean
cmd clearcache %set -f; rm -rf ~/.cache/thumbnails; echo "thumbnails reseted"

## autojump
# cmd aj %lf -remote "send $id cd '$(autojump $1 } sed 's/\\/\\\\/g;s/"/\\"/g')'"
# map a push :aj<space>

# define a custom 'rename' command without prompt for overwrite
# cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
# map r push :rename<space>

# make sure trash folder exists
# %mkdir -p ~/.trash

# move current file or selected files to trash folder
# (also see 'man mv' for backup/overwrite options)
cmd trash %{{
    set -f 
    trashdir="${XDG_CONFIG_DIR:-$HOME/.local/share}/Trash"
    [ -d "$trashdir" ] || mkdir -p "$trashdir"

    for file in $fx; do
        name="$(basename "$file")"
        rm -rf "$trashdir/$name"
        [ -e "$file" ] || (echo "Deleted permanetly!" && exit 0)
        mv -f "$file" "$trashdir"
        echo "Trashed at $trashdir/$name."
    done
}}

# define a custom 'delete' command
# cmd delete ${{
#     set -f
#     printf "$fx\n"
#     printf "delete?[y/n]"
#     read ans
#     [ "$ans" = "y" ] && rm -rf $fx
# }}

# use '<delete>' key for either 'trash' or 'delete' command
map <delete> delete
map D trash
# map <delete> delete

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    atool -x $fx || continue
}}
map E extract

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

# edit config
cmd edit-config ${{
    $EDITOR ~/.config/lf/lfrc
    lf -remote "send $id source ~/.config/lf/lfrc"
}}

map C edit-config
map J :updir; set dironly true; down; set dironly false; open
map K :updir; set dironly true; up; set dironly false; open

cmd bulkrename ${{
    set -f
    old="$(mktemp)"
    new="$(mktemp)"
    if [ -n "$fs" ]; then
        fs="$(basename -a $fs)"
    else
        fs="$(ls)"
    fi
    printf '%s\n' "$fs" >"$old"
    printf '%s\n' "$fs" >"$new"
    $EDITOR "$new"
    [ "$(wc -l < "$new")" -ne "$(wc -l < "$old")" ] && exit
    paste "$old" "$new" | while IFS= read -r names; do
        src="$(printf '%s' "$names" | cut -f1)"
        dst="$(printf '%s' "$names" | cut -f2)"
        if [ "$src" = "$dst" ] || [ -e "$dst" ]; then
            continue
        fi
        mv -- "$src" "$dst"
    done
    rm -- "$old" "$new"
    lf -remote "send $id unselect"
}}
map R bulkrename

cmd z %{{
	result="$(zoxide query --exclude $PWD $@ | sed 's/\\/\\\\/g;s/"/\\"/g')"
	lf -remote "send $id cd \"$result\""
}}

cmd zi ${{
	result="$(zoxide query -i | sed 's/\\/\\\\/g;s/"/\\"/g')"
	lf -remote "send $id cd \"$result\""
}}

cmd on-cd &{{
        zoxide add "$PWD"
}}

setlocal ~/.local/share/Trash sortby time
setlocal ~/.local/share/Trash reverse
setlocal ~/dls/tg sortby time
setlocal ~/dls/tg reverse


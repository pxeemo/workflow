(deflisten vol
    `./scripts/get-volume`)

(defwidget volume []
    (label
        :text {
            vol == '[MUTED]' ? '󰝟 Mute' : 
            vol < 33 ? '󰕿 ${vol}' :
            vol < 66 ? '󰖀 ${vol}' :
            '󰕾 ${vol}' }))

(defpoll net :interval '5s'
    `nmcli --terse --fields SIGNAL,ACTIVE device wifi | awk -F: '{if($2=="yes")print$1}'`)

(defpoll essid :interval '5s' :initial "N/A"
    `nmcli connection | awk '/wlp/{print$1}'`)

(defwidget network []
(label 
        :text  {
            net == '' ? '󰤨' :
            net < 26 ? '󰤟' :
            net < 51 ? '󰤢' :
            net < 76 ? '󰤥' :
            '󰤨' }
        :tooltip '${essid} (${net}%)'))

(deflisten layout "scripts/get-keyboard")

(defwidget keyboard []
(label 
        :text {
            layout == 'English (US)' ? 'EN' : 
            layout == 'Persian' ? 'FA' : 
            '??'
        }))

(deflisten window :initial "..." `sh ~/.config/eww/scripts/get-window-title`)
(defwidget window_w []
(box
    (label :text "${window}")))

(defpoll time
    :interval "1s"
    'date +%H:%M')
(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")

(defwidget workspaces []
(eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
    (box :space-evenly true
        (label :text "${workspaces}${current_workspace}" :visible false)
        (for workspace in workspaces
            (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
                (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
                    (label :text "${workspace.id}")))))))

(defwidget clock []
    "${time}")

(defwidget bar []
(centerbox
    (window_w)
    (workspaces)
    (box
        (volume)
        (network)
        (keyboard)
        (clock))))

(defwindow bar
    :exclusive true
    :monitor 0
    :geometry (geometry :x "0%" :y "0%"
        :width "100%" :height "36px" :anchor "bottom center")
    :stacking "fg"
    :focusable false
    :namespace "eww"
(bar))

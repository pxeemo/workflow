(defpoll music_single   :interval "2s" `mpc status '%single%'`)
(defpoll music_random   :interval "2s" `mpc status '%random%'`)
(defpoll music_repeat   :interval "2s" `mpc status '%repeat%'`)
(defpoll music_consume  :interval "2s" `mpc status '%consume%'`)
(defwidget music-win []
(overlay :space-evenly false :spacing 20
    (box :class 'music-cover' :style 'background: url("${music_info.cover}");')
    (box :class 'music-pop' :height "360" 
        (box :orientation 'v' :space-evenly false :spacing 10 :valign 'end'
            {music_info.artist} {music_info.track}
            (box :spacing 10 :class 'music-controls' :space-evenly false :halign "center"
                (button :class music_single :onclick 'mpc single; eww update music_single=$(mpc status "%single%")' '1')
                (button :class music_repeat :onclick 'mpc repeat; eww update music_repeat=$(mpc status "%repeat%")' '󰑖')
                (button :onclick `mpc prev` '󰒮')
                (button :onclick `mpc toggle` {music_info.toggle_icon})
                (button :onclick `mpc next` '󰒭')
                (button :class music_random :onclick 'mpc random; eww update music_random=$(mpc status "%random%")' '󰒝')
                (button :class music_consume :onclick 'mpc consume; eww update music_consume=$(mpc status "%consume%")' '󰍖'))
            (scale :class 'music-seeker' :value {music_time.perc} :onchange `mpc seek {}%`)))))

(defwindow music
    :exclusive true
    :monitor 0
    :geometry (geometry :x "15px" :y "15px"
        :width "400px" :height "400px" :anchor "top left")
    :stacking "fg"
    ;; :focusable true
    :namespace "eww"
(music-win))
